package NumberBaseBall;

import java.util.Random;

public class NumberBaseBallPureMain {
    public static void main(String[] args) {
        Random rand = new Random();
        int rounds = 1000;
        int totalTries = 0;
        int maxTries = 0;
        int minTries = 100;

        for (int game = 0; game < rounds; game++) {
            // 1. 정답 랜덤 생성(중복 없음)
            int[] answer = new int[3];
            boolean[] used = new boolean[10];
            int idx = 0;
            while (idx < 3) {
                int digit = rand.nextInt(10);
                if (!used[digit]) {
                    used[digit] = true;
                    answer[idx++] = digit;
                }
            }

            // 2. 후보군 초기화
            int[][] candidates = new int[720][3];
            int candidateCount = 0;
            for (int i = 0; i < 10; i++) {
                for (int j = 0; j < 10; j++) {
                    if (j == i) continue;
                    for (int k = 0; k < 10; k++) {
                        if (k == i || k == j) continue;
                        candidates[candidateCount][0] = i;
                        candidates[candidateCount][1] = j;
                        candidates[candidateCount][2] = k;
                        candidateCount++;
                    }
                }
            }

            // 3. 추측/필터 반복
            int tries = 0;
            while (true) {
                tries++;
                int[] guess = candidates[0]; // 후보군 첫번째를 추측

                // strike/ball 판정
                int strike = 0, ball = 0;
                for (int i = 0; i < 3; i++) {
                    if (guess[i] == answer[i]) strike++;
                    else if (guess[i] == answer[(i+1)%3] || guess[i] == answer[(i+2)%3]) ball++;
                }
                if (game == 0) {
                    System.out.printf("AI 추측: %d%d%d  → Strike: %d, Ball: %d\n", guess[0], guess[1], guess[2], strike, ball);
                }

                if (strike == 3) break;

                // 후보군 필터링
                int[][] newCandidates = new int[720][3];
                int newCount = 0;
                for (int idx2 = 0; idx2 < candidateCount; idx2++) {
                    int[] cand = candidates[idx2];
                    int s = 0, b = 0;
                    for (int i = 0; i < 3; i++) {
                        if (guess[i] == cand[i]) s++;
                        else if (guess[i] == cand[(i+1)%3] || guess[i] == cand[(i+2)%3]) b++;
                    }
                    if (s == strike && b == ball) {
                        newCandidates[newCount][0] = cand[0];
                        newCandidates[newCount][1] = cand[1];
                        newCandidates[newCount][2] = cand[2];
                        newCount++;
                    }
                }
                // 후보군 덮어쓰기
                for (int i = 0; i < newCount; i++) {
                    candidates[i][0] = newCandidates[i][0];
                    candidates[i][1] = newCandidates[i][1];
                    candidates[i][2] = newCandidates[i][2];
                }
                candidateCount = newCount;
            }

            totalTries += tries;
            if (tries > maxTries) maxTries = tries;
            if (tries < minTries) minTries = tries;
            if (game == 0) System.out.println("정답: " + answer[0] + answer[1] + answer[2] + ", " + tries + "번 만에 맞춤\n");
        }

        System.out.println("1000번 실행 평균 시도: " + ((double)totalTries / rounds));
        System.out.println("최소: " + minTries + "번, 최대: " + maxTries + "번");
    }
}
